apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth
  namespace: ecosystem
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth-web
  template:
    metadata:
      labels:
        app: oauth-web
    spec:
      imagePullSecrets:
        - name: leafdev-registry
      volumes:
        - name: oauth-env
          configMap:
            name: oauth-env
        - name: oauth-private-key
          secret:
            secretName: oauth-secret
      containers:
        - name: web
          image: leafdev.top/ecosystem/oauth:v0-1-9-fix-3
          imagePullPolicy: Always
          command:
            - /usr/bin/start.sh
            - init
            - web
            - --host=0.0.0.0
            - --port=8000
            - --workers=1
            - --server=roadrunner
          envFrom:
            - configMapRef:
                name: oauth-env
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: APP_KEY
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: DB_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: REDIS_PASSWORD
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MAIL_PASSWORD
            - name: PASSPORT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: PASSPORT_PRIVATE_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: MILVUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MILVUS_PASSWORD
          resources:
            limits:
              cpu: 100m
              memory: 1024Mi
          ports:
            - containerPort: 8000
              name: http-8000
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: oauth-private-key
              mountPath: /app/storage/oauth-private.key
              subPath: OAUTH_PRIVATE_KEY
            - name: oauth-env
              mountPath: /app/storage/oauth-public.key
              subPath: OAUTH_PUBLIC_KEY
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth-schedule
  namespace: ecosystem
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth-schedule
  template:
    metadata:
      labels:
        app: oauth-schedule
    spec:
      imagePullSecrets:
        - name: leafdev-registry
      volumes:
        - name: oauth-env
          configMap:
            name: oauth-env
        - name: oauth-private-key
          secret:
            secretName: oauth-secret
      containers:
        - name: schedule
          image: leafdev.top/ecosystem/oauth:v0-1-9-fix-3
          imagePullPolicy: Always
          command:
            - /usr/bin/start.sh
            - schedule:work
          envFrom:
            - configMapRef:
                name: oauth-env
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: APP_KEY
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: DB_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: REDIS_PASSWORD
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MAIL_PASSWORD
            - name: PASSPORT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: PASSPORT_PRIVATE_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: MILVUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MILVUS_PASSWORD
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
          volumeMounts:
            - name: oauth-private-key
              mountPath: /app/storage/oauth-private.key
              subPath: OAUTH_PRIVATE_KEY
            - name: oauth-env
              mountPath: /app/storage/oauth-public.key
              subPath: OAUTH_PUBLIC_KEY
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth-worker
  namespace: ecosystem
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth-worker
  template:
    metadata:
      labels:
        app: oauth-worker
    spec:
      imagePullSecrets:
        - name: leafdev-registry
      containers:
        - name: worker
          image: leafdev.top/ecosystem/oauth:v0-1-9-fix-3
          imagePullPolicy: Always
          command:
            - /usr/bin/start.sh
            - init
            - queue
            - --queue=default,high
          envFrom:
            - configMapRef:
                name: oauth-env
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: APP_KEY
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: DB_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: REDIS_PASSWORD
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MAIL_PASSWORD
            - name: PASSPORT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: PASSPORT_PRIVATE_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: MILVUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: MILVUS_PASSWORD
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: oauth-web-svc
  namespace: ecosystem
spec:
  selector:
    app: oauth-web
  ports:
    - port: 8000
      name: http-8000
  type: ClusterIP
#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: oauth-env
#  namespace: ecosystem
#data:
#  APP_NAME: "Laravel"
#  DISPLAY_NAME: "Laravel"
#  APP_ENV: "local"
#  APP_DEBUG: "true"
#  APP_URL: "http://localhost"
#
#  DB_HOST: "127.0.0.1"
#  DB_PORT: "3306"
#  DB_DATABASE: "oauth"
#  DB_USERNAME: "root"
#
#  REDIS_HOST: "127.0.0.1"
#  REDIS_PORT: "6379"
#
#  MAIL_MAILER: "smtp"
#  MAIL_HOST: "mailpit"
#  MAIL_PORT: "1025"
#  MAIL_USERNAME: "null"
#  MAIL_ENCRYPTION: "null"
#  MAIL_FROM_ADDRESS: "hello@example.com"
#  MAIL_FROM_NAME: '"${APP_NAME}"'
#
#  AWS_DEFAULT_REGION: "cn-yangzhou-1"
#  AWS_BUCKET: ""
#  AWS_URL: ""
#  AWS_ENDPOINT: "false"
#
#  PUSHER_APP_ID: ""
#  PUSHER_APP_KEY: ""
#  PUSHER_APP_SECRET: ""
#  PUSHER_HOST: ""
#  PUSHER_PORT: "443"
#  PUSHER_SCHEME: "https"
#  PUSHER_APP_CLUSTER: "mt1"
#
#  VITE_PUSHER_APP_KEY: '"${PUSHER_APP_KEY}"'
#  VITE_PUSHER_HOST: '"${PUSHER_HOST}"'
#  VITE_PUSHER_PORT: '"${PUSHER_PORT}"'
#  VITE_PUSHER_SCHEME: '"${PUSHER_SCHEME}"'
#  VITE_PUSHER_APP_CLUSTER: '"${PUSHER_APP_CLUSTER}"'
#
#  SUPPORT_PAY_URL: ""
#  SUPPORT_PAY_MCH_ID: ""
#  SUPPORT_PAY_MCH_KEY: ""
#
#  SUPPORT_REAL_NAME_APP_CODE: ""
#  OCTANE_HTTPS: "true"
#  PASSPORT_PUBLIC_KEY: ""
#  SUPPORT_FACE_API: ""
#  MILVUS_USERNAME: ""
#  MILVUS_HOST: ""
#  MILVUS_PORT: ""
#  MILVUS_DB_NAME: "oauth"
#  SUPPORT_SMS_APP_KEY: ""
#  SUPPORT_SMS_APP_SECRET: ""
#  SUPPORT_SMS_SIGN_ID: ""
#  SUPPORT_SMS_TEMPLATE_VERIFY_CODE: ""
#  WECHAT_ID: ""
#  WECHAT_APPID: ""
#  WECHAT_SECRET: ""
#  WECHAT_TOKEN: ""
#  WECHAT_AES_KEY: ""
#  RECAPTCHA_SITE_KEY: ""
#  RECAPTCHA_SECRET_KEY: ""
#  YUBIKEY_CLIENT_ID: ""
#  YUBIKEY_CLIENT_SECRET: ""
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: oauth-secret
#  namespace: ecosystem
#stringData:
#  APP_KEY: ""
#  DB_PASSWORD: ""
#  REDIS_PASSWORD: ""
#  MAIL_PASSWORD: ""
#  PASSPORT_PRIVATE_KEY: ""
#  AWS_ACCESS_KEY_ID: ""
#  AWS_SECRET_ACCESS_KEY: ""
#  MILVUS_PASSWORD: ""
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth
  namespace: ecosystem
spec:
  ingressClassName: nginx
  rules:
    - host: auth.leaflow.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oauth-web-svc
                port:
                  name: http-8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oauth-hpa
  namespace: ecosystem
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oauth
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
