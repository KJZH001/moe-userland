stages:
  - build
  - package

docker-build:
  image: docker:latest
  stage: build
  tags:
    - local
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

update_chart:
  image: registry.daisukide.com:2083/ivampiresp/debian-with-tools:latest
  stage: package
  script:
    - version=$(cat .chart/Chart.yaml | yq -r ".version")
    - echo "Current version $version"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        channel="develop"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag="$CI_COMMIT_REF_SLUG"
        channel="stable"
        newVersion=".appVersion = \"$tag\""

        yq -i "$newVersion" .chart/Chart.yaml  -y

        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - helm package .chart

    - chartFileName=$(ls -a  | grep .tgz)
    - echo "Chart file name $chartFileName"
    - echo "Channel $channel"
    - echo "chart=@$chartFileName"
    - cat .chart/Chart.yaml
    - 'curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@$chartFileName" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/$channel/charts"'

#deploy_to_cluster:
#  image:
#    name: bitnami/kubectl:latest
#    entrypoint: ['']
#  tags:
#    - ecosystem
#  stage: deploy
#  script:
#    - |
#      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
#        tag=""
#        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
#      else
#        tag=":$CI_COMMIT_REF_SLUG"
#        sed -i "s/registry.daisukide.com:2083\/ecosystem\/oauth:latest/registry.daisukide.com:2083\/ecosystem\/oauth$tag/g" deploy/manifest.yaml
#        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
#      fi
#    - kubectl get pods
#    - kubectl apply -f deploy/manifest.yaml
#    - |
#      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
#        kubectl -n ecosystem rollout restart deployment oauth
#      fi
